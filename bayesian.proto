syntax = "proto2";

package bayes;

service BayesNet{
  rpc StartNet(BayesianNetwork) returns (int32) {}
  rpc Query(Query) returns (Answer) {}
  }

message BayesianNetwork{

  message DiscreteDistribution{
    required string name = 1;
		
    message Variable{
      required string name = 1;
      required float probability = 2; //probabilities of the variables within a discrete distribution sum to 1.0
    }
    repeated Variable variables = 2;
  }
  repeated DiscreteDistribution discreteDistributions = 1;
  
  message ConditionalProbabilityTable{
    required string name = 1;
    
    message RandomVariable {
    	required string name = 1;
    }
    repeated RandomVariable randomVariables = 2;
	
	message ConditionalProbabilityRow {
	
	  message RandomVariableValue{
	    required string name = 1;
	    }
	
	  repeated RandomVariableValue randomVariableValues= 1;
	  required float probability = 2;  //probabilities of the conditional probability rows within a conditional probability table sum to 1.0
	}
	repeated ConditionalProbabilityRow conditionalProbabilityRows = 3;
  }
  repeated ConditionalProbabilityTable conditionalProbabilityTables = 2;
}

message Query{
  required int32 net_id = 1;
  message Evidence{
    required int32 var_num = 1;
    required int32 response = 2;
    }
  repeated Evidence evidence = 2;
  message Outvar{
    required int32 var_num = 1;
  }
  repeated Outvar outvars = 3;
}


message Answer{
  
  message VarAnswer{
    required int32 var_num = 1;
    
    message VarState{
      required int32 state_num=1;
      required float probability=2
    }
    repeated VarState varStates = 2;
  }
  repeated VarAnswer varAnswers = 1;
}
 
